name: "CI/CD: Terraform plus Ansible with Domain and SSL"

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: terraform

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.7

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Terraform Init
      run: terraform init

    - name: Terraform Apply with domain
      run: |
        terraform apply -auto-approve \
          -var="key_name=ec2-test" \
          -var="domain_name=${{ secrets.DOMAIN_NAME }}"

    - name: Extract Public IP & Domain Name
      id: outputs
      run: |
        echo "ip=$(terraform output -raw instance_public_ip)" >> $GITHUB_OUTPUT
        echo "domain=$(terraform output -raw domain_name)" >> $GITHUB_OUTPUT

    - name: Write SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/ec2-test.pem
        chmod 600 ~/.ssh/ec2-test.pem

    - name: Create Ansible Inventory
      run: |
        mkdir -p ../ansible
        echo "[web]" > ../ansible/inventory.ini
        echo "${{ steps.outputs.outputs.ip }} ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/ec2-test.pem" >> ../ansible/inventory.ini

    - name: Install Ansible
      run: |
        sudo apt update
        sudo apt install -y ansible

    - name: Run Ansible Playbook with Domain
      env:
        ANSIBLE_HOST_KEY_CHECKING: "False"
      run: |
        ansible-playbook -i ../ansible/inventory.ini ../ansible/playbook.yml \
          -e domain_name="${{ steps.outputs.outputs.domain }}"
